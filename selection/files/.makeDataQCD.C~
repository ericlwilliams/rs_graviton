#include <TChain.h>
#include <string.h>

void makeDataQCD(string type="",string proc=""){

  string cur_type = type;
  if(cur_type.find("")==string::npos ||
     (cur_type.find("qcd")==string::npos &&
      cur_type.find("data")==string::npos)){
    cout<<"Choose qcd/data to skim! Your choice: "<<cur_type<<endl;

    gROOT->ProcessLine(".q");
    return;
  }

  bool isMakeData = cur_type.find("data")!=string::npos;
  
  string cur_proc = proc;

  if(cur_proc.find("")==string::npos ||
     (cur_proc.find("elec")==string::npos &&
      cur_proc.find("muon")==string::npos)){
    cout<<"Choose elec/muon to skim! Your choice: "<<cur_proc<<endl;

    gROOT->ProcessLine(".q");
    return;
  }

  string new_skim_name = cur_type+"."+cur_proc+".pu.skim.root";
  string chain_name = "run.data."+cur_proc+".pu.skim.root";
  
  TChain * chain = new TChain("analysisTree");
  chain->Add(chain_name.c_str());


  Float_t         evt_pu_weight;
  Float_t         trig_sf;
  Float_t         lep_id_sf;
  Float_t         lep_reco_sf;
  Float_t         evt_weight_trig_sf_up;
  Float_t         evt_weight_trig_sf_down;
  Float_t         evt_weight_id_sf_up;
  Float_t         evt_weight_id_sf_down;
  Float_t         evt_weight_reco_sf_up;
  Float_t         evt_weight_reco_sf_down;
  Int_t           nGoodElectrons;
  Int_t           nGoodMuons;
  Int_t           nGoodJets;
  Int_t           nGoodVxp;
  Float_t         avgIntPerXing;
  Int_t           RunNum;
  Int_t           EvtNum;
  Float_t         RunLumi;
  Int_t           goodLeptonIndex;
  Int_t           goodNeutrinoSolution;
  Float_t         lvjj_lep_pt;
  Float_t         lvjj_lep_les_up;
  Float_t         lvjj_lep_les_down;
  Float_t         lvjj_lep_ler_up;
  Float_t         lvjj_lep_ler_down;
  Float_t         lvjj_lep_eta;
  Float_t         lvjj_lep_phi;
  Float_t         lead_jet_m;
  Float_t         lead_jet_pt;
  Float_t         lead_jet_jer_scale;
  Float_t         lead_jet_jer_up;
  Float_t         lead_jet_jer_down;
  Float_t         lead_jet_jes_up;
  Float_t         lead_jet_jes_down;
  Float_t         lead_jet_eta;
  Float_t         lead_jet_phi;
  Float_t         second_jet_m;
  Float_t         second_jet_pt;
  Float_t         second_jet_jer_scale;
  Float_t         second_jet_jer_up;
  Float_t         second_jet_jer_down;
  Float_t         second_jet_jes_up;
  Float_t         second_jet_jes_down;
  Float_t         second_jet_eta;
  Float_t         second_jet_phi;
  Float_t         third_jet_m;
  Float_t         third_jet_pt;
  Float_t         third_jet_jer_scale;
  Float_t         third_jet_jer_up;
  Float_t         third_jet_jer_down;
  Float_t         third_jet_jes_up;
  Float_t         third_jet_jes_down;
  Float_t         third_jet_eta;
  Float_t         third_jet_phi;
  Float_t         fourth_jet_m;
  Float_t         fourth_jet_pt;
  Float_t         fourth_jet_jer_scale;
  Float_t         fourth_jet_jer_up;
  Float_t         fourth_jet_jer_down;
  Float_t         fourth_jet_jes_up;
  Float_t         fourth_jet_jes_down;
  Float_t         fourth_jet_eta;
  Float_t         fourth_jet_phi;
  Int_t           ctrl_ewk;
  Int_t           ctrl_all;
  Int_t           qcd_event;
  Int_t           ctrl_boost1;
  Int_t           ctrl_boost2;
  Int_t           ctrl_ttbar;
  Int_t           ctrl_sig_lowm;
  Int_t           ctrl_sig_highm;
  Float_t         lvjj_met_phi;
  Float_t         lvjj_met_et;
  Float_t         lvjj_met_set;
  Float_t         rf_met_phi;
  Float_t         rf_met_et;
  Float_t         rf_met_set;
  Float_t         lvjj_ootpu_up_met_etx;
  Float_t         lvjj_ootpu_up_met_ety;
  Float_t         lvjj_ootpu_up_met_et;
  Float_t         lvjj_ootpu_down_met_etx;
  Float_t         lvjj_ootpu_down_met_ety;
  Float_t         lvjj_ootpu_down_met_et;
  Float_t         lvjj_intpu_up_met_etx;
  Float_t         lvjj_intpu_up_met_ety;
  Float_t         lvjj_intpu_up_met_et;
  Float_t         lvjj_intpu_down_met_etx;
  Float_t         lvjj_intpu_down_met_ety;
  Float_t         lvjj_intpu_down_met_et;
  Float_t         lvjj_jer_up_met_phi;
  Float_t         lvjj_jer_up_met_et;
  Float_t         lvjj_jer_down_met_phi;
  Float_t         lvjj_jer_down_met_et;
  Float_t         lvjj_jes_up_met_phi;
  Float_t         lvjj_jes_up_met_et;
  Float_t         lvjj_jes_down_met_phi;
  Float_t         lvjj_jes_down_met_et;
  Float_t         lvjj_coef_up_met_phi;
  Float_t         lvjj_coef_up_met_et;
  Float_t         lvjj_coef_down_met_phi;
  Float_t         lvjj_coef_down_met_et;
  Float_t         lvjj_sjets_up_met_phi;
  Float_t         lvjj_sjets_up_met_et;
  Float_t         lvjj_sjets_down_met_phi;
  Float_t         lvjj_sjets_down_met_et;
  Float_t         lvjj_les_down_met_phi;
  Float_t         lvjj_les_down_met_et;
  Float_t         lvjj_les_up_met_phi;
  Float_t         lvjj_les_up_met_et;
  Float_t         lvjj_ler_down_met_phi;
  Float_t         lvjj_ler_down_met_et;
  Float_t         lvjj_ler_up_met_phi;
  Float_t         lvjj_ler_up_met_et;
  Float_t         lep_met_pt;
  Float_t         lep_met_mt;
  Float_t         lep_nu_m;
  Float_t         lep_met_jet_mt;
  Float_t         lep_nu_jet_m;
  Float_t         lep_nu_dijet_m;
  Float_t         lep_met_dijet_mt;
  Float_t         dijet_m;
  Float_t         dijet_pt;
  Float_t         dijet_dr;
  Float_t         sig_jet_m;
  Float_t         lep_nu_sig_jet_m;
  Float_t         lep_met_sig_jet_mt;
  Float_t         lvjj_lt;
  Float_t         lvjj_ht;
  Float_t         lvjj_st;

 
  chain->SetBranchAddress("evt_pu_weight", &evt_pu_weight);
  chain->SetBranchAddress("trig_sf", &trig_sf);
  chain->SetBranchAddress("lep_id_sf", &lep_id_sf);
  chain->SetBranchAddress("lep_reco_sf", &lep_reco_sf);
  chain->SetBranchAddress("evt_weight_trig_sf_up", &evt_weight_trig_sf_up);
  chain->SetBranchAddress("evt_weight_trig_sf_down", &evt_weight_trig_sf_down);
  chain->SetBranchAddress("evt_weight_id_sf_up", &evt_weight_id_sf_up);
  chain->SetBranchAddress("evt_weight_id_sf_down", &evt_weight_id_sf_down);
  chain->SetBranchAddress("evt_weight_reco_sf_up", &evt_weight_reco_sf_up);
  chain->SetBranchAddress("evt_weight_reco_sf_down", &evt_weight_reco_sf_down);
  chain->SetBranchAddress("nGoodElectrons", &nGoodElectrons);
  chain->SetBranchAddress("nGoodMuons", &nGoodMuons);
  chain->SetBranchAddress("nGoodJets", &nGoodJets);
  chain->SetBranchAddress("nGoodVxp", &nGoodVxp);
  chain->SetBranchAddress("avgIntPerXing", &avgIntPerXing);
  chain->SetBranchAddress("RunNum", &RunNum);
  chain->SetBranchAddress("EvtNum", &EvtNum);
  chain->SetBranchAddress("RunLumi", &RunLumi);
  chain->SetBranchAddress("goodLeptonIndex", &goodLeptonIndex);
  chain->SetBranchAddress("goodNeutrinoSolution", &goodNeutrinoSolution);
  chain->SetBranchAddress("lvjj_lep_pt", &lvjj_lep_pt);
  chain->SetBranchAddress("lvjj_lep_les_up", &lvjj_lep_les_up);
  chain->SetBranchAddress("lvjj_lep_les_down", &lvjj_lep_les_down);
  chain->SetBranchAddress("lvjj_lep_ler_up", &lvjj_lep_ler_up);
  chain->SetBranchAddress("lvjj_lep_ler_down", &lvjj_lep_ler_down);
  chain->SetBranchAddress("lvjj_lep_eta", &lvjj_lep_eta);
  chain->SetBranchAddress("lvjj_lep_phi", &lvjj_lep_phi);
  chain->SetBranchAddress("lead_jet_m", &lead_jet_m);
  chain->SetBranchAddress("lead_jet_pt", &lead_jet_pt);
  chain->SetBranchAddress("lead_jet_jer_scale", &lead_jet_jer_scale);
  chain->SetBranchAddress("lead_jet_jer_up", &lead_jet_jer_up);
  chain->SetBranchAddress("lead_jet_jer_down", &lead_jet_jer_down);
  chain->SetBranchAddress("lead_jet_jes_up", &lead_jet_jes_up);
  chain->SetBranchAddress("lead_jet_jes_down", &lead_jet_jes_down);
  chain->SetBranchAddress("lead_jet_eta", &lead_jet_eta);
  chain->SetBranchAddress("lead_jet_phi", &lead_jet_phi);
  chain->SetBranchAddress("second_jet_m", &second_jet_m);
  chain->SetBranchAddress("second_jet_pt", &second_jet_pt);
  chain->SetBranchAddress("second_jet_jer_scale", &second_jet_jer_scale);
  chain->SetBranchAddress("second_jet_jer_up", &second_jet_jer_up);
  chain->SetBranchAddress("second_jet_jer_down", &second_jet_jer_down);
  chain->SetBranchAddress("second_jet_jes_up", &second_jet_jes_up);
  chain->SetBranchAddress("second_jet_jes_down", &second_jet_jes_down);
  chain->SetBranchAddress("second_jet_eta", &second_jet_eta);
  chain->SetBranchAddress("second_jet_phi", &second_jet_phi);
  chain->SetBranchAddress("third_jet_m", &third_jet_m);
  chain->SetBranchAddress("third_jet_pt", &third_jet_pt);
  chain->SetBranchAddress("third_jet_jer_scale", &third_jet_jer_scale);
  chain->SetBranchAddress("third_jet_jer_up", &third_jet_jer_up);
  chain->SetBranchAddress("third_jet_jer_down", &third_jet_jer_down);
  chain->SetBranchAddress("third_jet_jes_up", &third_jet_jes_up);
  chain->SetBranchAddress("third_jet_jes_down", &third_jet_jes_down);
  chain->SetBranchAddress("third_jet_eta", &third_jet_eta);
  chain->SetBranchAddress("third_jet_phi", &third_jet_phi);
  chain->SetBranchAddress("fourth_jet_m", &fourth_jet_m);
  chain->SetBranchAddress("fourth_jet_pt", &fourth_jet_pt);
  chain->SetBranchAddress("fourth_jet_jer_scale", &fourth_jet_jer_scale);
  chain->SetBranchAddress("fourth_jet_jer_up", &fourth_jet_jer_up);
  chain->SetBranchAddress("fourth_jet_jer_down", &fourth_jet_jer_down);
  chain->SetBranchAddress("fourth_jet_jes_up", &fourth_jet_jes_up);
  chain->SetBranchAddress("fourth_jet_jes_down", &fourth_jet_jes_down);
  chain->SetBranchAddress("fourth_jet_eta", &fourth_jet_eta);
  chain->SetBranchAddress("fourth_jet_phi", &fourth_jet_phi);
  chain->SetBranchAddress("ctrl_ewk", &ctrl_ewk);
  chain->SetBranchAddress("ctrl_all", &ctrl_all);
  chain->SetBranchAddress("qcd_event", &qcd_event);
  chain->SetBranchAddress("ctrl_boost1", &ctrl_boost1);
  chain->SetBranchAddress("ctrl_boost2", &ctrl_boost2);
  chain->SetBranchAddress("ctrl_ttbar", &ctrl_ttbar);
  chain->SetBranchAddress("ctrl_sig_lowm", &ctrl_sig_lowm);
  chain->SetBranchAddress("ctrl_sig_highm", &ctrl_sig_highm);
  chain->SetBranchAddress("lvjj_met_phi", &lvjj_met_phi);
  chain->SetBranchAddress("lvjj_met_et", &lvjj_met_et);
  chain->SetBranchAddress("lvjj_met_set", &lvjj_met_set);
  chain->SetBranchAddress("rf_met_phi", &rf_met_phi);
  chain->SetBranchAddress("rf_met_et", &rf_met_et);
  chain->SetBranchAddress("rf_met_set", &rf_met_set);
  chain->SetBranchAddress("lvjj_ootpu_up_met_etx", &lvjj_ootpu_up_met_etx);
  chain->SetBranchAddress("lvjj_ootpu_up_met_ety", &lvjj_ootpu_up_met_ety);
  chain->SetBranchAddress("lvjj_ootpu_up_met_et", &lvjj_ootpu_up_met_et);
  chain->SetBranchAddress("lvjj_ootpu_down_met_etx", &lvjj_ootpu_down_met_etx);
  chain->SetBranchAddress("lvjj_ootpu_down_met_ety", &lvjj_ootpu_down_met_ety);
  chain->SetBranchAddress("lvjj_ootpu_down_met_et", &lvjj_ootpu_down_met_et);
  chain->SetBranchAddress("lvjj_intpu_up_met_etx", &lvjj_intpu_up_met_etx);
  chain->SetBranchAddress("lvjj_intpu_up_met_ety", &lvjj_intpu_up_met_ety);
  chain->SetBranchAddress("lvjj_intpu_up_met_et", &lvjj_intpu_up_met_et);
  chain->SetBranchAddress("lvjj_intpu_down_met_etx", &lvjj_intpu_down_met_etx);
  chain->SetBranchAddress("lvjj_intpu_down_met_ety", &lvjj_intpu_down_met_ety);
  chain->SetBranchAddress("lvjj_intpu_down_met_et", &lvjj_intpu_down_met_et);
  chain->SetBranchAddress("lvjj_jer_up_met_phi", &lvjj_jer_up_met_phi);
  chain->SetBranchAddress("lvjj_jer_up_met_et", &lvjj_jer_up_met_et);
  chain->SetBranchAddress("lvjj_jer_down_met_phi", &lvjj_jer_down_met_phi);
  chain->SetBranchAddress("lvjj_jer_down_met_et", &lvjj_jer_down_met_et);
  chain->SetBranchAddress("lvjj_jes_up_met_phi", &lvjj_jes_up_met_phi);
  chain->SetBranchAddress("lvjj_jes_up_met_et", &lvjj_jes_up_met_et);
  chain->SetBranchAddress("lvjj_jes_down_met_phi", &lvjj_jes_down_met_phi);
  chain->SetBranchAddress("lvjj_jes_down_met_et", &lvjj_jes_down_met_et);
  chain->SetBranchAddress("lvjj_coef_up_met_phi", &lvjj_coef_up_met_phi);
  chain->SetBranchAddress("lvjj_coef_up_met_et", &lvjj_coef_up_met_et);
  chain->SetBranchAddress("lvjj_coef_down_met_phi", &lvjj_coef_down_met_phi);
  chain->SetBranchAddress("lvjj_coef_down_met_et", &lvjj_coef_down_met_et);
  chain->SetBranchAddress("lvjj_sjets_up_met_phi", &lvjj_sjets_up_met_phi);
  chain->SetBranchAddress("lvjj_sjets_up_met_et", &lvjj_sjets_up_met_et);
  chain->SetBranchAddress("lvjj_sjets_down_met_phi", &lvjj_sjets_down_met_phi);
  chain->SetBranchAddress("lvjj_sjets_down_met_et", &lvjj_sjets_down_met_et);
  chain->SetBranchAddress("lvjj_les_down_met_phi", &lvjj_les_down_met_phi);
  chain->SetBranchAddress("lvjj_les_down_met_et", &lvjj_les_down_met_et);
  chain->SetBranchAddress("lvjj_les_up_met_phi", &lvjj_les_up_met_phi);
  chain->SetBranchAddress("lvjj_les_up_met_et", &lvjj_les_up_met_et);
  chain->SetBranchAddress("lvjj_ler_down_met_phi", &lvjj_ler_down_met_phi);
  chain->SetBranchAddress("lvjj_ler_down_met_et", &lvjj_ler_down_met_et);
  chain->SetBranchAddress("lvjj_ler_up_met_phi", &lvjj_ler_up_met_phi);
  chain->SetBranchAddress("lvjj_ler_up_met_et", &lvjj_ler_up_met_et);
  chain->SetBranchAddress("lep_met_pt", &lep_met_pt);
  chain->SetBranchAddress("lep_met_mt", &lep_met_mt);
  chain->SetBranchAddress("lep_nu_m", &lep_nu_m);
  chain->SetBranchAddress("lep_met_jet_mt", &lep_met_jet_mt);
  chain->SetBranchAddress("lep_nu_jet_m", &lep_nu_jet_m);
  chain->SetBranchAddress("lep_nu_dijet_m", &lep_nu_dijet_m);
  chain->SetBranchAddress("lep_met_dijet_mt", &lep_met_dijet_mt);
  chain->SetBranchAddress("dijet_m", &dijet_m);
  chain->SetBranchAddress("dijet_pt", &dijet_pt);
  chain->SetBranchAddress("dijet_dr", &dijet_dr);
  chain->SetBranchAddress("sig_jet_m", &sig_jet_m);
  chain->SetBranchAddress("lep_nu_sig_jet_m", &lep_nu_sig_jet_m);
  chain->SetBranchAddress("lep_met_sig_jet_mt", &lep_met_sig_jet_mt);
  chain->SetBranchAddress("lvjj_lt", &lvjj_lt);
  chain->SetBranchAddress("lvjj_ht", &lvjj_ht);
  chain->SetBranchAddress("lvjj_st", &lvjj_st);


  TFile *qcdfile = new TFile(new_skim_name.c_str(),"recreate");
  chain->LoadTree(0);
  TTree *newtree = chain->GetTree()->CloneTree(0);

  
  Int_t nevents = (Int_t)chain->GetEntries();
  Int_t nbytes = 0;
  Int_t nselected = 0;
  
  for(int ievent=0; ievent<nevents; ievent++)
    {
      nbytes += chain->GetEntry(ievent);

      bool goodEvent = (isMakeData) ?
	!qcd_event :
	qcd_event;

      if(!goodEvent) continue;
      
      
      //if(qcd_event) continue;
      //if(!ctrl_all) continue;

      nselected++;

      newtree->Fill();

    }

  cout<<nselected<<" events in "<<cur_type<<" - "<<cur_proc<<" skim"<<endl;
  newtree->Write();
  qcdfile->Close();

  gROOT->ProcessLine(".q");
  return;
}
